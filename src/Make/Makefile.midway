# This Makefile is meant for use after
# module load mkl
# module load gsl
# on any of RCC's clusters at UChicago.

MKLPATH = $(MKLROOT)/lib/intel64
MKLINCLUDE = $(MKLROOT)/include
GSLPATH = $(GSL_DIR)/lib
GSLINC = $(GSL_DIR)/include
GMXPATH = $(HOME)/local/lib
GMXINC = $(HOME)/local/include
OPT = -O2 -std=c++11

LIBS         = -lm $(GSLPATH)/libgsl.a -mkl -lxdrfile
LDFLAGS      = $(OPT) -L$(GMXPATH) -L$(GSLPATH)
CFLAGS       = $(OPT) -I$(GSLINC) -I$(GMXINC)

NO_GRO_LIBS    = -lm $(GSLPATH)/libgsl.a -mkl
NO_GRO_LDFLAGS = $(OPT) -L$(GSLPATH)
NO_GRO_CFLAGS  = $(OPT) -I$(GSLINC)

CC           = icc

COMMON_OBJECTS = control_input.o fm_output.o force_computation.o geometry.o interaction_hashing.o interaction_model.o matrix.o splines.o topology.o trajectory_input.o misc.o
NO_GRO_COMMON_OBJECTS = control_input.o fm_output.o force_computation.o geometry.o interaction_hashing.o interaction_model.o matrix.o splines.o topology.o trajectory_input_no_gro.o misc.o
COMMON_SOURCE = control_input.h fm_output.h force_computation.h geometry.h interaction_hashing.h interaction_model.h matrix.h splines.h topology.h trajectory_input.h misc.h mscg.h

# Target executables
# The library for LAMMPS is lib_mscg.a
libmscg.a: mscg.o $(NO_GRO_COMMON_OBJECTS) range_finding.o
	ar rvs libmscg.a *.o

newrem.x: newrem.o  $(COMMON_OBJECTS) 
	$(CC) $(LDFLAGS) -o $@ newrem.o $(COMMON_OBJECTS) $(LIBS)

newfm.x: newfm.o $(COMMON_OBJECTS)
    $(CC) $(LDFLAGS) -o $@ newfm.o $(COMMON_OBJECTS) $(LIBS)

newfm_no_gro.x: newfm.o $(NO_GRO_COMMON_OBJECTS)
	$(CC) $(NO_GRO_LDFLAGS) -o $@ newfm.o $(NO_GRO_COMMON_OBJECTS) $(NO_GRO_LIBS) -D"_exclude_gromacs=1"

rangefinder.x: rangefinder.o range_finding.o $(COMMON_OBJECTS)
    $(CC) $(LDFLAGS) -o $@ rangefinder.o range_finding.o $(COMMON_OBJECTS) $(LIBS)

rangefinder_no_gro.x: rangefinder.o range_finding.o $(NO_GRO_COMMON_OBJECTS)
	$(CC) $(NO_GRO_LDFLAGS) -o $@ rangefinder.o range_finding.o $(NO_GRO_COMMON_OBJECTS) $(NO_GRO_LIBS) -D"_exclude_gromacs=1"

combinefm.x: combinefm.o batch_fm_combination.o $(COMMON_OBJECTS)
	$(CC) $(LDFLAGS) -o $@ combinefm.o batch_fm_combination.o $(COMMON_OBJECTS) $(LIBS)

# Target objects

mscg.o: mscg.cpp $(COMMON_SOURCE) range_finding.o
	$(CC) $(CFLAGS) -c mscg.cpp -o mscg.o $(NO_GRO_LIBS)

newrem.o: newrem.cpp $(COMMON_SOURCE)
	$(CC) $(CFLAGS) -c newrem.cpp

newfm.o: newfm.cpp $(COMMON_SOURCE)
    $(CC) $(CFLAGS) -c newfm.cpp

rangefinder.o: rangefinder.cpp range_finding.h $(COMMON_SOURCE)
    $(CC) $(CFLAGS) -c rangefinder.cpp

combinefm.o: combinefm.cpp batch_fm_combination.h $(COMMON_SOURCE)
	$(CC) $(CFLAGS) -c combinefm.cpp

batch_fm_combination.o: batch_fm_combination.cpp batch_fm_combination.h external_matrix_routines.h misc.h
    $(CC) $(CFLAGS) -c batch_fm_combination.cpp

control_input.o: control_input.cpp control_input.h misc.h
    $(CC) $(CFLAGS) -c control_input.cpp

fm_output.o: fm_output.cpp fm_output.h force_computation.h misc.h
    $(CC) $(CFLAGS) -c fm_output.cpp

force_computation.o: force_computation.cpp force_computation.h interaction_model.h matrix.h trajectory_input.h misc.h
    $(CC) $(CFLAGS) -c force_computation.cpp

geometry.o: geometry.h
    $(CC) $(CFLAGS) -c geometry.cpp

interaction_hashing.o: interaction_hashing.cpp interaction_hashing.h
    $(CC) $(CFLAGS) -c interaction_hashing.cpp

interaction_model.o: interaction_model.cpp interaction_model.h control_input.h interaction_hashing.h topology.h misc.h
    $(CC) $(CFLAGS) -c interaction_model.cpp

matrix.o: matrix.cpp matrix.h control_input.h external_matrix_routines.h interaction_model.h misc.h
    $(CC) $(CFLAGS) -c matrix.cpp

misc.o: misc.cpp misc.h
    $(CC) $(CFLAGS) -c misc.cpp

range_finding.o: range_finding.cpp range_finding.h force_computation.h interaction_model.h matrix.h misc.h
    $(CC) $(CFLAGS) -c range_finding.cpp

splines.o: splines.h interaction_model.h
    $(CC) $(CFLAGS) -c splines.cpp

topology.o: topology.cpp topology.h interaction_model.h misc.h
    $(CC) $(CFLAGS) -c topology.cpp

trajectory_input.o: trajectory_input.cpp trajectory_input.h control_input.h misc.h
    $(CC) $(CFLAGS) -c trajectory_input.cpp

trajectory_input_no_gro.o: trajectory_input.cpp trajectory_input.h control_input.h misc.h
	$(CC) $(NO_GRO_CFLAGS) -c trajectory_input.cpp -D"_exclude_gromacs=1" -o trajectory_input_no_gro.o

# Other convenient commands

clean:
    rm *.[o]

all:
	make newfm.x; \
	make rangefinder.x; \
	make combinefm.x; \
	make newrem.x;